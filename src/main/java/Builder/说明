建造者模式

将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建出不同的表示。

一般来说建造者模式适用于非常复杂的对象构建,即这个对象的构建可能需要很多有逻辑的步骤


1，模式功能：最终目的是为了建造一个对象Product，在对象构建时才会使用建造者模式。
2，复杂对象：我们要创建的对象是复杂的，所以内部细节会很繁琐，需要把对象各个组成部分封装处理。
            当对象构建过程简单时，别滥用这个设计模式。
3，构建和表示分离：对象的构建细节和最终表示解耦，即需要一个建造者Builder，只负责对象的每个组成的
            内部实现，还需要有一个导演者Director，通过Builder把对象按步骤拼装起来。
4，“相同”的构建过程，不同的表示：一个复杂对象，建造过程相同，但是建造的每一步的内部细节实现不同，
            产生出不同的对象表示。实际场景里，相同的构建方法，不同的组装顺序，产生不同的结果也会
            使用建造者模式，这个相同更多的体现在产品的组成相同，即Builder里的方法相同

举例：安卓App的开发过程，App就是需要生产的产品，有不同的App如QQ和微信，各种App内部细节是不同的
     ，但是app需要在安卓系统中存在并运行，其组成是相同(界面，数据，缓存...)。

